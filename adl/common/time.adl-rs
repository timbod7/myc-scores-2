module common.time {


import adlc.config.rust.*;

annotation Instant RustCustomType {
  "rustname" : "crate::custom::common::time::Instant",
  "helpers" : "crate::custom::common::time::Instant",
  "stdTraits": ["Eq", "PartialEq", "Hash", "Serialize", "Deserialize", "Clone"]
};

annotation LocalDate RustCustomType {
  "rustname" : "crate::custom::common::time::LocalDate",
  "helpers" : "crate::custom::common::time::LocalDate",
  "stdTraits": ["Eq", "PartialEq", "Hash", "Serialize", "Deserialize", "Clone"]
};

annotation LocalTime RustCustomType {
  "rustname" : "crate::custom::common::time::LocalTime",
  "helpers" : "crate::custom::common::time::LocalTime",
  "stdTraits": ["Eq", "PartialEq", "Hash", "Serialize", "Deserialize", "Clone"]
};

annotation LocalDateTime RustCustomType {
  "rustname" : "crate::custom::common::time::LocalDateTime",
  "helpers" : "crate::custom::common::time::LocalDateTime",
  "stdTraits": ["Eq", "PartialEq", "Hash", "Serialize", "Deserialize", "Clone"]
};

};
